TestCase subclass: #BurbujaTest	instanceVariableNames: 'burbuja personaSinCovid personaSospechosoCovid personaConCovid'	classVariableNames: ''	package: 'TP1-Tests'!!BurbujaTest methodsFor: 'running' stamp: 'NicolasZulaica 5/13/2021 21:01'!setUp	burbuja := Burbuja new.		personaSinCovid := Persona new.		personaSospechosoCovid := Persona new.	personaSospechosoCovid agregarSintoma: 'covid'.		personaConCovid := Persona new.	(personaConCovid agregarSintoma: 'sugar') agregarSintoma: 'spice'.	(personaConCovid agregarSintoma: 'everything') agregarSintoma: 'nice'.! !!BurbujaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 21:34'!test03BurbujaSePinchaCuandoAlguienContraeCovid	burbuja agregar: personaSinCovid.	burbuja agregar: personaSospechosoCovid.		self deny: burbuja estaPinchada.		(personaSospechosoCovid agregarSintoma: 'Tos') agregarSintoma: 'Fiebre'.	self assert: personaSospechosoCovid diagnostico equals: 'Positivo'.		self assert: burbuja estaPinchada.! !!BurbujaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 22:41'!test04PersonaEnBurbujaPinchadaNoPuedeCircular	burbuja agregar: personaSinCovid.	personaSinCovid estaVacunadx.			self assert: personaSinCovid puedeCircular.	self deny: burbuja estaPinchada.		burbuja agregar: personaConCovid .		self assert: burbuja estaPinchada.	self deny: personaSinCovid puedeCircular.! !!BurbujaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 22:50'!test05PersonaNoPuedeCircularAlEntrarEnBurbujaPinchada		burbuja agregar: personaConCovid .	self assert: burbuja estaPinchada.		personaSinCovid estaVacunadx.	self assert: personaSinCovid puedeCircular.			burbuja agregar: personaSinCovid.	self deny: personaSinCovid puedeCircular.! !!BurbujaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 21:02'!test00SetUpCorrecto	self assert: personaSinCovid  diagnostico equals: 'Negativo'.	self assert: personaSospechosoCovid  diagnostico equals: 'Sospechoso'.	self assert: personaConCovid diagnostico equals: 'Positivo'.! !!BurbujaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 21:10'!test01BurbujaSinCovidPositivoNoEstaPinchada	burbuja agregar: personaSinCovid.	burbuja agregar: personaSospechosoCovid .		self deny: burbuja estaPinchada.! !!BurbujaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 21:12'!test02BurbujaConCovidPositivoEstaPinchada	burbuja agregar: personaSinCovid.	burbuja agregar: personaSospechosoCovid.	burbuja agregar: personaConCovid.		self assert: burbuja estaPinchada.! !TestCase subclass: #CondicionTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/11/2021 20:57'!test09NoVacunadoDefectoCircular	self assert: NoVacunado new permisoCircular class equals: DefectoCircular.! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 20:03'!test14CovidPositivoEstadoAlContactarEsPositivo	self assert: CovidPositivo new estadoAlContactar class equals: ContactoEstrechoPositivo .! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 20:06'!test15CovidSospechosoEstadoAlContactarEsSospechoso	self assert: SospechosoCovid new estadoAlContactar class equals: ContactoEstrechoSospechoso .! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/11/2021 20:59'!test04ContactoEstrechoPositivoNoPuedeCircular	self assert: ContactoEstrechoPositivo new permisoCircular class equals: NoPuedeCircular.! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 20:07'!test16CovidNegativoEstadoAlContactarEsNegativo	self assert: CovidNegativo new estadoAlContactar class equals: ContactoEstrechoNegativo .! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 20:53'!test01SiAlguienEnLaBurbujaEsUnCasoConfirmadoEntoncesLaBurbujaEstaPinchada! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 22:43'!test17EnBurbujaPinchadaNoPuedeCircular	self assert: EnBurbujaPinchada new permisoCircular class equals: NoPuedeCircular .! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/11/2021 20:56'!test03CovidNegativoDefectoCircular	self assert: CovidNegativo new permisoCircular class equals: DefectoCircular.! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 19:56'!test13ContactoEstrechoNegativoDefectoCircular	self assert: ContactoEstrechoNegativo new permisoCircular class equals: DefectoCircular.! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/11/2021 21:20'!test06PersonalEscencialPuedeCircular	self assert: PersonalEscencial new permisoCircular class equals: PuedeCircular.! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 18:58'!test11DiagnosticoCovidNegativoEsNegativo	self assert: CovidNegativo new diagnostico equals: 'Negativo'.! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/11/2021 22:06'!test01CovidPositivoNoPuedeCircular	self assert: CovidPositivo new permisoCircular class equals: NoPuedeCircular .! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/11/2021 21:01'!test05ContactoEstrechoSospechosoNoPuedeCircular	self assert: ContactoEstrechoSospechoso new permisoCircular class equals: NoPuedeCircular.! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/11/2021 20:49'!test02SospechodoCovidNoPuedeCircular	self assert: SospechosoCovid new permisoCircular class equals: NoPuedeCircular.! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/11/2021 21:21'!test07PersonalDeRiesgoNoPuedeCircular	self assert: PersonalDeRiesgo new permisoCircular class equals: NoPuedeCircular.! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 18:57'!test10DiagnosticoCovidPositivoEsPositivo	self assert: CovidPositivo new diagnostico equals: 'Positivo'.! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 18:59'!test12DiagnosticoSospechosoCovidEsSospechoso	self assert: SospechosoCovid new diagnostico equals: 'Sospechoso'.! !!CondicionTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/11/2021 20:57'!test08VacunadoPuedeCircular	self assert: Vacunado new permisoCircular class equals: PuedeCircular .! !TestCase subclass: #EstadosBurbujaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!EstadosBurbujaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 21:51'!test02EstadoPinchadaEstaPinchada	self assert: EstadoPinchada new estaPinchada equals: true. ! !!EstadosBurbujaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 21:51'!test01EstadoNoPinchadaNoEstaPinchada	self assert: EstadoNoPinchada new estaPinchada equals: false. ! !TestCase subclass: #PermisoTests	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!PermisoTests methodsFor: 'tests' stamp: 'NicolasZulaica 5/11/2021 20:27'!test04NoPuedeCircularYOtroEsNoPuedeCircular	self assert: ( NoPuedeCircular new y: DefectoCircular new ) class equals: NoPuedeCircular.	self assert: ( NoPuedeCircular new y: PuedeCircular  new ) class equals: NoPuedeCircular.	self assert: ( NoPuedeCircular new y: NoPuedeCircular new ) class equals: NoPuedeCircular.! !!PermisoTests methodsFor: 'tests' stamp: 'NicolasZulaica 5/11/2021 20:29'!test05PuedeCircularYOtroEsPuedeCircularExceptoQueSeDigaLoContrario	self assert: ( PuedeCircular new y: DefectoCircular new ) class equals: PuedeCircular.	self assert: ( PuedeCircular new y: PuedeCircular  new ) class equals: PuedeCircular.	self assert: ( PuedeCircular new y: NoPuedeCircular new ) class equals: NoPuedeCircular.! !!PermisoTests methodsFor: 'tests' stamp: 'NicolasZulaica 5/10/2021 20:55'!test01PuedeCircular	self assert: (PuedeCircular new) puedeCircular.! !!PermisoTests methodsFor: 'tests' stamp: 'NicolasZulaica 5/10/2021 20:56'!test02NoPuedeCircular	self deny: (NoPuedeCircular new) puedeCircular.! !!PermisoTests methodsFor: 'tests' stamp: 'NicolasZulaica 5/11/2021 20:22'!test03DefectoNoPuedeCircular	self deny: (DefectoCircular new) puedeCircular.! !!PermisoTests methodsFor: 'tests' stamp: 'NicolasZulaica 5/11/2021 20:30'!test06DefaultCircularYOtroEsOtro	self assert: ( DefectoCircular new y: DefectoCircular new ) class equals: DefectoCircular.	self assert: ( DefectoCircular new y: PuedeCircular  new ) class equals: PuedeCircular.	self assert: ( DefectoCircular new y: NoPuedeCircular new ) class equals: NoPuedeCircular.! !TestCase subclass: #PersonaTest	instanceVariableNames: 'persona otraPersona'	classVariableNames: ''	package: 'TP1-Tests'!!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 19:34'!test15PersonaVacunadasEnContactoEstrechoConCovidSospechosoNoPuedenCircular	persona estaVacunadx.		otraPersona agregarSintoma: 'Hipertension'.	persona enConactoCon: otraPersona.	self assert:( otraPersona diagnostico ) equals: 'Sospechoso' .		self deny:( persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 19:19'!test09DiagnosticoCon2SintomasSospechoso	persona agregarSintoma: 'Gases'.	persona agregarSintoma: 'Liquidos'.	self assert:( persona diagnostico ) equals: 'Sospechoso'.! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 19:11'!test08DiagnosticoSinSintomasNegativo	self assert:( persona diagnostico ) equals: 'Negativo'.! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/10/2021 19:00'!test02PuedeCircularAlEstarVacunadx 	persona estaVacunadx.	self assert:( persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/10/2021 18:46'!test01PorDefectoNoPuedeCircular 	self deny:( persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 19:29'!test13PersonasSinCovidEnContactoEstrechoNoPuedenCircular	persona enConactoCon: otraPersona.	self deny:( persona puedeCircular ).	self deny:( otraPersona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/11/2021 23:21'!test05PorDefectoNoTieneCovid	self assert: persona diagnostico equals: 'Negativo'.! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 20:16'!test17PersonalDeRiesgoNoPuedeCircular	persona esPersonaDeRiesgo.	self deny:( persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/10/2021 21:54'!test04VacunadoNoPuedeCircularConSintomas	persona estaVacunadx.	persona agregarSintoma: 'tos'.	self deny: persona puedeCircular.! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 20:19'!test18PersonalDeRiesgoVacunadoEscencialNoPuedeCircular	persona esPersonaDeRiesgo.	persona estaVacunadx.	persona esPersonalEsencial.	self deny:( persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 19:19'!test10DiagnosticoCon4SintomasPositivo	persona agregarSintoma: 'Gases'.	persona agregarSintoma: 'Liquidos'.	persona agregarSintoma: 'Solidos'.	persona agregarSintoma: 'Plasma'.	self assert:( persona diagnostico ) equals: 'Positivo'.! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 19:31'!test14PersonasSinCovidSiVacunadasEnContactoEstrechoPuedenCircular	persona estaVacunadx.	persona enConactoCon: otraPersona.	self assert:( persona puedeCircular ).	self deny:( otraPersona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/10/2021 20:43'!test03NoPuedeCircularConSintomas	persona agregarSintoma: 'tos'.		self deny: persona puedeCircular.! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 19:59'!test16EstadoAlContactarPersonaSinCovidEsEstadoNegativo	self assert:( persona estadoAlContactar class ) equals: ContactoEstrechoNegativo.! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 22:45'!test19PersonaEnBurbujaPinchadaNoPuedeCircular	persona esPersonaDeRiesgo.	persona estaVacunadx.	persona enBurbujaPinchada.	self deny:( persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/11/2021 23:50'!test06PuedeCircularAlSerEscencial 	persona esPersonalEsencial.	self assert:( persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 19:10'!test06ConUnoODosSintomaTieneCovidSospechoso	persona agregarSintoma: 'insomnio'.	self assert: persona diagnostico equals: 'Sospechoso'.	persona agregarSintoma: 'sangrado de encias'.	self assert: persona diagnostico equals: 'Sospechoso'.! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 19:06'!test07NoConSintomasPuedeCircularAlSerEscencial 	persona esPersonalEsencial.	persona agregarSintoma: 'caries'.	self deny:( persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'NicolasZulaica 5/13/2021 19:20'!test12DiagnosticoCon3SintomasCon1ComunPositivo	persona agregarSintoma: 'Gases'.	persona agregarSintoma: 'Liquidos'.	persona agregarSintoma: 'Tos'.	self assert:( persona diagnostico ) equals: 'Positivo'.! !!PersonaTest methodsFor: 'running' stamp: 'NicolasZulaica 5/13/2021 19:31'!setUp	persona := Persona new.	otraPersona := Persona new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PersonaTest class	instanceVariableNames: 'persona'!