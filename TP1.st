Object subclass: #Condicion	instanceVariableNames: 'permiso'	classVariableNames: ''	package: 'TP1-Condiciones'!!Condicion methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/10/2021 19:26'!puedeCircular	^permiso puedeCircular.! !Condicion subclass: #SospechosoCovid	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Condiciones'!!SospechosoCovid methodsFor: 'initialization' stamp: 'NicolasZulaica 5/10/2021 20:54'!initialize	permiso := NoPuedeCircular new.! !Condicion subclass: #Vacunado	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Condiciones'!!Vacunado methodsFor: 'initialization' stamp: 'NicolasZulaica 5/10/2021 18:47'!initialize	permiso := PuedeCircular new.! !Object subclass: #AlgoVid	instanceVariableNames: 'personas'	classVariableNames: ''	package: 'TP1-Main'!!AlgoVid methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/10/2021 20:04'!diagnosticoDe: persona 	^'Sospechoso'! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/10/2021 22:10'!agregarSintoma: sintoma a: persona 	^(personas at: persona ifAbsent: [^nil] ) agregarSintoma: sintoma.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/10/2021 18:10'!nuevaPersona: nombre	personas at:nombre put: Persona new.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/10/2021 22:10'!puedeCircular: nombre	^ (personas at: nombre ifAbsent: [^nil] ) puedeCircular.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/10/2021 22:10'!estaVacunadx: nombre	(personas at: nombre ifAbsent: [^nil] ) estaVacunadx.! !!AlgoVid methodsFor: 'initialization' stamp: 'NicolasZulaica 5/10/2021 17:25'!initialize	personas := Dictionary new.! !Object subclass: #Persona	instanceVariableNames: 'condiciones sintomas'	classVariableNames: ''	package: 'TP1-Main'!!Persona methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/10/2021 21:53'!puedeCircular	condiciones ifEmpty:[^DefectoCircular new puedeCircular].	^ condiciones inject: true into:[ :acumulado :condicion | acumulado and: (condicion puedeCircular)  ].! !!Persona methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/10/2021 19:01'!estaVacunadx	condiciones add: Vacunado new.! !!Persona methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/10/2021 23:40'!agregarSintoma: sintoma 	sintomas add: sintoma.	( sintomas count > 3 )ifTrue: [ sintomas add: SospechosoCovid new ].! !!Persona methodsFor: 'initialization' stamp: 'NicolasZulaica 5/10/2021 23:20'!initialize	condiciones := Set new.	sintomas := Set new.! !Object subclass: #DefectoCircular	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Permisos'!!DefectoCircular methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/10/2021 21:50'!puedeCircular 	^false.! !!DefectoCircular methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/11/2021 20:32'!y: otroPermiso  	^ otroPermiso.! !Object subclass: #NoPuedeCircular	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Permisos'!!NoPuedeCircular methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/10/2021 20:45'!puedeCircular	^false.! !!NoPuedeCircular methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/11/2021 20:32'!y: otroPermiso  	^self.! !Object subclass: #PuedeCircular	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Permisos'!!PuedeCircular methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/10/2021 18:47'!puedeCircular	^true.! !!PuedeCircular methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/11/2021 20:33'!y: otroPermiso	(otroPermiso class = NoPuedeCircular )ifTrue: [ ^otroPermiso ].	^self.! !