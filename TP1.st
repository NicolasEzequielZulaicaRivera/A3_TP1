Error subclass: #BurbujaNoExisteError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Excepciones'!!BurbujaNoExisteError commentStamp: 'NicolasZulaica 5/15/2021 23:37' prior: 0!Error que se lanza al tratar de acceder a una burbuja que no existe!Error subclass: #BurbujaYaExisteError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Excepciones'!!BurbujaYaExisteError commentStamp: 'NicolasZulaica 5/15/2021 23:38' prior: 0!Error que se lanza al tratar de bobrescribir a una burbuja que ya existe!Error subclass: #ColegioNoExisteError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Excepciones'!!ColegioNoExisteError commentStamp: 'NicolasZulaica 5/15/2021 23:37' prior: 0!Error que se lanza al tratar de acceder a un colegio que no existe!Error subclass: #ColegioYaExisteError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Excepciones'!!ColegioYaExisteError commentStamp: 'NicolasZulaica 5/15/2021 23:38' prior: 0!Error que se lanza al tratar de bobrescribir a un colegio que ya existe!Error subclass: #PersonaNoExisteError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Excepciones'!!PersonaNoExisteError commentStamp: 'NicolasZulaica 5/15/2021 23:37' prior: 0!Error que se lanza al tratar de acceder a una persona que no existe!Error subclass: #PersonaYaExisteError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Excepciones'!!PersonaYaExisteError commentStamp: 'NicolasZulaica 5/15/2021 23:38' prior: 0!Error que se lanza al tratar de bobrescribir a una persona que ya existe!Object subclass: #AlgoVid	instanceVariableNames: 'personas burbujas colegios'	classVariableNames: ''	package: 'TP1-Main'!!AlgoVid commentStamp: 'NicolasZulaica 5/15/2021 23:39' prior: 0!API que modela la interrelacion entre personas, burbujas y colegios en el contexto de la pandemia (2021)!!AlgoVid methodsFor: 'colegio' stamp: 'NicolasZulaica 5/15/2021 23:17'!nuevoColegio: nombre  	colegios at: nombre asUppercase ifPresent: [ ColegioYaExisteError signal ]	ifAbsentPut: Colegio new.! !!AlgoVid methodsFor: 'colegio' stamp: 'NicolasZulaica 5/15/2021 23:07'!agregarA: nombreBurbuja alColegio: nombreColegio 	( colegios at: nombreColegio asUppercase ifAbsent: [ ColegioNoExisteError signal ]) agregar: 	( burbujas at: nombreBurbuja asUppercase ifAbsent: [ BurbujaNoExisteError signal ]).! !!AlgoVid methodsFor: 'colegio' stamp: 'NicolasZulaica 5/15/2021 23:07'!clasesPresencialesEn: nombreColegio 	^(colegios at: nombreColegio asUppercase ifAbsent: [ ColegioNoExisteError signal ]) clasesPresenciales.! !!AlgoVid methodsFor: 'personas' stamp: 'NicolasZulaica 5/15/2021 23:14'!nuevaPersona: nombre	personas at: nombre asUppercase ifPresent: [ PersonaYaExisteError signal ]  	ifAbsentPut: Persona new. ! !!AlgoVid methodsFor: 'personas' stamp: 'NicolasZulaica 5/15/2021 22:50'!puedeCircular: nombre	^ (personas at: nombre asUppercase ifAbsent: [ PersonaNoExisteError signal ] ) puedeCircular.! !!AlgoVid methodsFor: 'personas' stamp: 'NicolasZulaica 5/15/2021 22:50'!diagnosticoDe: persona 	^ (personas at: persona asUppercase ifAbsent: [ PersonaNoExisteError signal ]) diagnostico.! !!AlgoVid methodsFor: 'personas-contacto' stamp: 'NicolasZulaica 5/15/2021 22:54'!contactoEstrechoEntre: nombre1 y: nombre2 	(personas at: nombre1 asUppercase ifAbsent: [ PersonaNoExisteError signal ]) enConactoCon: 	(personas at: nombre2 asUppercase ifAbsent: [ PersonaNoExisteError signal ]).! !!AlgoVid methodsFor: 'burbujas' stamp: 'NicolasZulaica 5/15/2021 23:02'!burbujaPinchada: nombreBurbuja  	^(burbujas at: nombreBurbuja asUppercase ifAbsent: [ BurbujaNoExisteError signal ]) estaPinchada.! !!AlgoVid methodsFor: 'burbujas' stamp: 'NicolasZulaica 5/15/2021 23:02'!agregarA: nombrePersona aLaBurbuja: nombreBurbuja 	( burbujas at: nombreBurbuja asUppercase ifAbsent: [ BurbujaNoExisteError signal ]) agregar: 	( personas at: nombrePersona  asUppercase ifAbsent: [ PersonaNoExisteError signal ]).! !!AlgoVid methodsFor: 'burbujas' stamp: 'NicolasZulaica 5/15/2021 23:16'!nuevaBurbuja: nombre 	burbujas at: nombre asUppercase ifPresent: [ BurbujaYaExisteError signal ]	ifAbsentPut: Burbuja new.! !!AlgoVid methodsFor: 'personas-condiciones' stamp: 'NicolasZulaica 5/15/2021 22:53'!esPersonalEsencial: nombre 	(personas at: nombre asUppercase ifAbsent: [ PersonaNoExisteError signal ]) esPersonalEsencial.! !!AlgoVid methodsFor: 'personas-condiciones' stamp: 'NicolasZulaica 5/15/2021 22:53'!agregarSintoma: sintoma a: nombrePersona 	^(personas at: nombrePersona asUppercase ifAbsent: [ PersonaNoExisteError signal ]) agregarSintoma: sintoma.! !!AlgoVid methodsFor: 'personas-condiciones' stamp: 'NicolasZulaica 5/15/2021 22:53'!esPersonaDeRiesgo: nombre 	(personas at: nombre asUppercase ifAbsent: [ PersonaNoExisteError signal ]) esPersonaDeRiesgo.! !!AlgoVid methodsFor: 'personas-condiciones' stamp: 'NicolasZulaica 5/15/2021 22:53'!estaVacunadx: nombre	(personas at: nombre asUppercase ifAbsent: [ PersonaNoExisteError signal ]) estaVacunadx.! !!AlgoVid methodsFor: 'initialization' stamp: 'NicolasZulaica 5/14/2021 16:32'!initialize	personas := Dictionary new.	burbujas := Dictionary new.	colegios := Dictionary new.! !Object subclass: #Burbuja	instanceVariableNames: 'personas estado'	classVariableNames: ''	package: 'TP1-Main'!!Burbuja commentStamp: 'NicolasZulaica 5/15/2021 23:39' prior: 0!Modela una burbuja ( grupo de gente )!!Burbuja methodsFor: 'initialization' stamp: 'NicolasZulaica 5/13/2021 21:54'!initialize	personas := Set new.	estado := EstadoNoPinchada new.! !!Burbuja methodsFor: 'modificarEstado' stamp: 'NicolasZulaica 5/13/2021 22:44'!pincharBurbuja	estado := EstadoPinchada new.	personas do: [ :persona | persona enBurbujaPinchada ].! !!Burbuja methodsFor: 'acceso' stamp: 'NicolasZulaica 5/14/2021 15:23'!agregar: persona 	personas add: persona.	persona agregarBurbuja: self.	estado efectoDe: self alAgregar: persona.! !!Burbuja methodsFor: 'acceso' stamp: 'NicolasZulaica 5/13/2021 21:54'!estaPinchada	^estado estaPinchada.! !Object subclass: #Colegio	instanceVariableNames: 'burbujas'	classVariableNames: ''	package: 'TP1-Main'!!Colegio commentStamp: 'NicolasZulaica 5/15/2021 23:39' prior: 0!Modela un colegio como grupos de burbujas!!Colegio methodsFor: 'initialization' stamp: 'NicolasZulaica 5/14/2021 15:55'!initialize 	burbujas := Set new.! !!Colegio methodsFor: 'acceso' stamp: 'NicolasZulaica 5/14/2021 16:30'!clasesPresenciales	burbujas ifEmpty: [ ^true ].	^ ( ( burbujas count: [ :burbuja | burbuja estaPinchada ] ) / burbujas size ) < ( 40/100 ).! !!Colegio methodsFor: 'acceso' stamp: 'NicolasZulaica 5/14/2021 15:57'!agregar: burbuja 	burbujas add: burbuja.! !Object subclass: #Persona	instanceVariableNames: 'condiciones diagnostico burbujas'	classVariableNames: ''	package: 'TP1-Main'!!Persona commentStamp: 'NicolasZulaica 5/15/2021 23:40' prior: 0!Modela una persona con foco al contagio de covid!!Persona methodsFor: 'acceso' stamp: 'NicolasZulaica 5/11/2021 23:22'!diagnostico	^(condiciones at: 'covid') diagnostico.! !!Persona methodsFor: 'acceso' stamp: 'NicolasZulaica 5/16/2021 00:03'!puedeCircular	^ (condiciones inject: DefectoCircular new 		into:[ :permiso :condicion | condicion permisoCircularSi: permiso  ]	) puedeCircular.! !!Persona methodsFor: 'grupos' stamp: 'NicolasZulaica 5/14/2021 15:23'!agregarBurbuja: grupo	burbujas add: grupo.! !!Persona methodsFor: 'grupos' stamp: 'NicolasZulaica 5/13/2021 23:16'!pinchaBurbuja: burbuja	(condiciones at: 'covid') pinchaBurbuja: burbuja.! !!Persona methodsFor: 'modificarCondicion' stamp: 'NicolasZulaica 5/13/2021 19:36'!enConactoCon: otraPersona 	self contactar: otraPersona.	otraPersona contactar: self. ! !!Persona methodsFor: 'modificarCondicion' stamp: 'NicolasZulaica 5/15/2021 20:12'!agregarSintoma: sintoma 	diagnostico agregarSintoma: sintoma.	self actualizarCovid: (diagnostico condicion).! !!Persona methodsFor: 'private' stamp: 'NicolasZulaica 5/14/2021 18:41'!contactar: otraPersona	condiciones at:'contacto' put:		(otraPersona estadoAlContactar y: (condiciones at: 'contacto') ). ! !!Persona methodsFor: 'private' stamp: 'NicolasZulaica 5/13/2021 22:26'!actualizarCovid: condicion	condiciones at: 'covid' put: condicion.	condicion impactaA: self.! !!Persona methodsFor: 'private' stamp: 'NicolasZulaica 5/13/2021 20:10'!estadoAlContactar	^(condiciones at: 'covid') estadoAlContactar.! !!Persona methodsFor: 'agregarCondicion' stamp: 'NicolasZulaica 5/13/2021 22:46'!enBurbujaPinchada	condiciones at: 'burbuja' put: EnBurbujaPinchada new.! !!Persona methodsFor: 'agregarCondicion' stamp: 'NicolasZulaica 5/13/2021 20:17'!esPersonaDeRiesgo	condiciones at: 'riesgo' put: PersonalDeRiesgo new.! !!Persona methodsFor: 'agregarCondicion' stamp: 'NicolasZulaica 5/11/2021 23:49'!esPersonalEsencial	condiciones at:'escencial' put: PersonalEscencial new.! !!Persona methodsFor: 'agregarCondicion' stamp: 'NicolasZulaica 5/14/2021 15:23'!estaComprometida	burbujas do: [ :grupo | grupo pincharBurbuja ].! !!Persona methodsFor: 'agregarCondicion' stamp: 'NicolasZulaica 5/13/2021 20:10'!estaVacunadx	condiciones at: 'vacunado' put: Vacunado new.! !!Persona methodsFor: 'initialization' stamp: 'NicolasZulaica 5/15/2021 20:11'!initialize	condiciones := Dictionary new.	diagnostico := Diagnostico new.	burbujas := Set new.		condiciones at: 'vacunado' put: NoVacunado new.	condiciones at: 'contacto' put: ContactoEstrechoNegativo new.	self actualizarCovid: CovidNegativo new.! !Object subclass: #Diagnostico	instanceVariableNames: 'sintomas'	classVariableNames: ''	package: 'TP1-Diagnostico'!!Diagnostico commentStamp: 'NicolasZulaica 5/15/2021 23:34' prior: 0!Modela el diagnostico de una persona en base a un conjunto de sintomas!!Diagnostico methodsFor: 'initialization' stamp: 'NicolasZulaica 5/15/2021 18:47'!initialize 	sintomas := Set new.! !!Diagnostico methodsFor: 'acceso' stamp: 'NicolasZulaica 5/15/2021 19:35'!condicion	sintomas ifEmpty: [ ^CovidNegativo new ].	( sintomas size > 3 )ifTrue: [ ^CovidPositivo new ].	( (sintomas size = 3) & (sintomas anySatisfy: [ :sintoma | sintoma esComun ] )  )ifTrue: [ ^CovidPositivo new ].	^SospechosoCovid new.! !!Diagnostico methodsFor: 'acceso' stamp: 'NicolasZulaica 5/15/2021 20:10'!agregarSintoma: nombreSintoma 	(sintomas anySatisfy: [ :sintoma | sintoma es: nombreSintoma  ])ifTrue: [^self].	sintomas add: (Sintoma nuevo: nombreSintoma).! !Object subclass: #Sintoma	instanceVariableNames: 'nombre'	classVariableNames: ''	package: 'TP1-Diagnostico'!!Sintoma commentStamp: 'NicolasZulaica 5/15/2021 23:35' prior: 0!Clase abstracta que modela sintomasLa creacion de sintomas se hace mediante el constructor de esta clase.!!Sintoma methodsFor: 'private' stamp: 'NicolasZulaica 5/15/2021 19:54'!nombre: nuevoNombre	nombre := nuevoNombre.! !!Sintoma methodsFor: 'acceso' stamp: 'NicolasZulaica 5/15/2021 19:49'!es: nombreSintoma  	^nombre sameAs: nombreSintoma.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Sintoma class	instanceVariableNames: ''!!Sintoma class methodsFor: 'constants' stamp: 'NicolasZulaica 5/15/2021 19:04'!sintomasComunes	^#( 'Tos' 'Fiebre' 'Cansancio' )! !!Sintoma class methodsFor: 'initialization' stamp: 'NicolasZulaica 5/15/2021 20:01'!nuevo: nombreSintoma	( self sintomasComunes includes: nombreSintoma  )ifTrue: [^SintomaComun new nombre: nombreSintoma ].	^SintomaSinClasificar new nombre: nombreSintoma.! !Sintoma subclass: #SintomaComun	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Diagnostico'!!SintomaComun commentStamp: 'NicolasZulaica 5/15/2021 23:36' prior: 0!Clase que modela sintomas comunes!!SintomaComun methodsFor: 'accessing - bad' stamp: 'NicolasZulaica 5/15/2021 19:03'!esComun 	^true.! !Sintoma subclass: #SintomaSinClasificar	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Diagnostico'!!SintomaSinClasificar commentStamp: 'NicolasZulaica 5/15/2021 23:36' prior: 0!Clase que modela sintomas que no han sido clasificados aun!!SintomaSinClasificar methodsFor: 'accessing - bad' stamp: 'NicolasZulaica 5/15/2021 19:03'!esComun 	^false.! !Object subclass: #EstadoNoPinchada	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-EstadosBurbuja'!!EstadoNoPinchada commentStamp: 'NicolasZulaica 5/15/2021 23:37' prior: 0!Modela el estado de una burbuja pinchada!!EstadoNoPinchada methodsFor: 'acceso' stamp: 'NicolasZulaica 5/13/2021 21:51'!estaPinchada	^false.! !!EstadoNoPinchada methodsFor: 'operaciones' stamp: 'NicolasZulaica 5/13/2021 23:13'!efectoDe: burbuja alAgregar: persona.	persona pinchaBurbuja: burbuja.! !Object subclass: #EstadoPinchada	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-EstadosBurbuja'!!EstadoPinchada commentStamp: 'NicolasZulaica 5/15/2021 23:37' prior: 0!Modela el estado de una burbuja sin pinchar!!EstadoPinchada methodsFor: 'operaciones' stamp: 'NicolasZulaica 5/13/2021 22:54'!efectoDe: burbuja alAgregar: persona.	persona enBurbujaPinchada.! !!EstadoPinchada methodsFor: 'acceso' stamp: 'NicolasZulaica 5/13/2021 21:52'!estaPinchada	^true! !Object subclass: #DefectoCircular	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Permisos'!!DefectoCircular commentStamp: 'NicolasZulaica 5/15/2021 23:42' prior: 0!Modela el permiso que se usa por defecto, incapacidad de circular!!DefectoCircular methodsFor: 'acceso' stamp: 'NicolasZulaica 5/10/2021 21:50'!puedeCircular 	^false.! !!DefectoCircular methodsFor: 'operadores-logicos' stamp: 'NicolasZulaica 5/14/2021 17:29'!yPuedeCircular 	^PuedeCircular new.! !!DefectoCircular methodsFor: 'operadores-logicos' stamp: 'NicolasZulaica 5/11/2021 20:32'!y: otroPermiso  	^ otroPermiso.! !Object subclass: #NoPuedeCircular	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Permisos'!!NoPuedeCircular commentStamp: 'NicolasZulaica 5/15/2021 23:40' prior: 0!Error que se lanza al tratar de bobrescribir a una persona que ya existe!!NoPuedeCircular methodsFor: 'acceso' stamp: 'NicolasZulaica 5/10/2021 20:45'!puedeCircular	^false.! !!NoPuedeCircular methodsFor: 'operadores-logicos' stamp: 'NicolasZulaica 5/14/2021 17:28'!yPuedeCircular 	^self.! !!NoPuedeCircular methodsFor: 'operadores-logicos' stamp: 'NicolasZulaica 5/11/2021 20:32'!y: otroPermiso  	^self.! !Object subclass: #PuedeCircular	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Permisos'!!PuedeCircular commentStamp: 'NicolasZulaica 5/15/2021 23:41' prior: 0!Modela la capacidad de circular, puede ser denegada si se dice lo contrario !!PuedeCircular methodsFor: 'operadores-logicos' stamp: 'NicolasZulaica 5/14/2021 17:28'!yPuedeCircular	^self.! !!PuedeCircular methodsFor: 'operadores-logicos' stamp: 'NicolasZulaica 5/14/2021 17:28'!y: otroPermiso	^otroPermiso yPuedeCircular.! !!PuedeCircular methodsFor: 'acceso' stamp: 'NicolasZulaica 5/10/2021 18:47'!puedeCircular	^true.! !Object subclass: #Condicion	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Condiciones'!!Condicion commentStamp: 'NicolasZulaica 5/15/2021 23:28' prior: 0!Clase Abstracta que modela las diferentes condicionesEs una clases abstracta en vez de una interfaz para poder heredar el comportamiento por defecto a sus hijos y asi ahorrar codigo!!Condicion methodsFor: 'as yet unclassified' stamp: 'NicolasZulaica 5/16/2021 00:00'!permisoCircularSi: unPermiso	^self permisoCircular y: unPermiso ! !!Condicion methodsFor: 'acceso' stamp: 'NicolasZulaica 5/11/2021 20:47'!permisoCircular	^DefectoCircular new.! !Condicion subclass: #ContactoEstrechoNegativo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Condiciones'!!ContactoEstrechoNegativo commentStamp: 'NicolasZulaica 5/15/2021 23:28' prior: 0!Modela la condicion de que se estuvo en contacto con alguien con covid negativo!!ContactoEstrechoNegativo methodsFor: 'operadores-logicos' stamp: 'NicolasZulaica 5/14/2021 18:35'!y: otroContacto 	^otroContacto.! !!ContactoEstrechoNegativo methodsFor: 'operadores-logicos' stamp: 'NicolasZulaica 5/14/2021 18:35'!ySospechoso	^ContactoEstrechoSospechoso new.! !Condicion subclass: #ContactoEstrechoPositivo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Condiciones'!!ContactoEstrechoPositivo commentStamp: 'NicolasZulaica 5/15/2021 23:29' prior: 0!Modela la condicion de que se estuvo en contacto con alguien con covid positivo!!ContactoEstrechoPositivo methodsFor: 'acceso' stamp: 'NicolasZulaica 5/11/2021 21:22'!permisoCircular 	^NoPuedeCircular new.! !!ContactoEstrechoPositivo methodsFor: 'operadores-logicos' stamp: 'NicolasZulaica 5/14/2021 18:59'!ySospechoso	^self.! !!ContactoEstrechoPositivo methodsFor: 'operadores-logicos' stamp: 'NicolasZulaica 5/14/2021 18:59'!y: otroContacto	^self.! !Condicion subclass: #ContactoEstrechoSospechoso	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Condiciones'!!ContactoEstrechoSospechoso commentStamp: 'NicolasZulaica 5/15/2021 23:30' prior: 0!Modela la condicion de que se estuvo en contacto con alguien con covid sospechoso!!ContactoEstrechoSospechoso methodsFor: 'acceso' stamp: 'NicolasZulaica 5/11/2021 21:22'!permisoCircular 	^NoPuedeCircular new.! !!ContactoEstrechoSospechoso methodsFor: 'operadores-logicos' stamp: 'NicolasZulaica 5/14/2021 18:33'!y: otroContacto	^otroContacto ySospechoso.! !!ContactoEstrechoSospechoso methodsFor: 'operadores-logicos' stamp: 'NicolasZulaica 5/14/2021 18:59'!ySospechoso	^self.! !Condicion subclass: #CovidNegativo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Condiciones'!!CovidNegativo commentStamp: 'NicolasZulaica 5/15/2021 23:31' prior: 0!Modela la condicion de estar segurx de tener covid!!CovidNegativo methodsFor: 'acceso' stamp: 'NicolasZulaica 5/13/2021 20:12'!diagnostico 	^'Negativo'.! !!CovidNegativo methodsFor: 'acceso' stamp: 'NicolasZulaica 5/13/2021 20:12'!estadoAlContactar	^ContactoEstrechoNegativo new.! !!CovidNegativo methodsFor: 'operaciones' stamp: 'NicolasZulaica 5/13/2021 22:27'!impactaA: persona	^nil.! !!CovidNegativo methodsFor: 'grupos' stamp: 'NicolasZulaica 5/13/2021 23:18'!pinchaBurbuja: burbuja	^nil.! !Condicion subclass: #CovidPositivo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Condiciones'!!CovidPositivo commentStamp: 'NicolasZulaica 5/15/2021 23:31' prior: 0!Modela la condicion de estar segurx de no tener covid!!CovidPositivo methodsFor: 'operaciones' stamp: 'NicolasZulaica 5/13/2021 22:28'!impactaA: persona 	persona estaComprometida.! !!CovidPositivo methodsFor: 'grupos' stamp: 'NicolasZulaica 5/13/2021 23:17'!pinchaBurbuja: burbuja 	burbuja pincharBurbuja.! !!CovidPositivo methodsFor: 'acceso' stamp: 'NicolasZulaica 5/13/2021 20:12'!diagnostico 	^'Positivo'.! !!CovidPositivo methodsFor: 'acceso' stamp: 'NicolasZulaica 5/11/2021 21:22'!permisoCircular 	^NoPuedeCircular new.! !!CovidPositivo methodsFor: 'acceso' stamp: 'NicolasZulaica 5/13/2021 20:04'!estadoAlContactar	^ContactoEstrechoPositivo new.! !Condicion subclass: #EnBurbujaPinchada	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Condiciones'!!EnBurbujaPinchada commentStamp: 'NicolasZulaica 5/15/2021 23:32' prior: 0!Modela la condicion de estar en una burbuja pinchada!!EnBurbujaPinchada methodsFor: 'acceso' stamp: 'NicolasZulaica 5/13/2021 22:42'!permisoCircular 	^NoPuedeCircular new.! !Condicion subclass: #NoVacunado	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Condiciones'!!NoVacunado commentStamp: 'NicolasZulaica 5/15/2021 23:29' prior: 0!Modela la condicion de que no se esta vacunado!Condicion subclass: #PersonalDeRiesgo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Condiciones'!!PersonalDeRiesgo commentStamp: 'NicolasZulaica 5/15/2021 23:30' prior: 0!Modela la condicion de que se es persona de riesgo!!PersonalDeRiesgo methodsFor: 'acceso' stamp: 'NicolasZulaica 5/11/2021 21:22'!permisoCircular 	^NoPuedeCircular new.! !Condicion subclass: #PersonalEscencial	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Condiciones'!!PersonalEscencial commentStamp: 'NicolasZulaica 5/15/2021 23:30' prior: 0!Modela la condicion de que se es personal esencial!!PersonalEscencial methodsFor: 'acceso' stamp: 'NicolasZulaica 5/11/2021 21:22'!permisoCircular 	^PuedeCircular new.! !Condicion subclass: #SospechosoCovid	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Condiciones'!!SospechosoCovid commentStamp: 'NicolasZulaica 5/15/2021 23:30' prior: 0!Modela la condicion de ser sospechoso de tener covid!!SospechosoCovid methodsFor: 'acceso' stamp: 'NicolasZulaica 5/13/2021 20:12'!diagnostico 	^'Sospechoso'.! !!SospechosoCovid methodsFor: 'acceso' stamp: 'NicolasZulaica 5/11/2021 20:52'!permisoCircular	^NoPuedeCircular new.! !!SospechosoCovid methodsFor: 'acceso' stamp: 'NicolasZulaica 5/13/2021 20:06'!estadoAlContactar	^ContactoEstrechoSospechoso new! !!SospechosoCovid methodsFor: 'operaciones' stamp: 'NicolasZulaica 5/13/2021 22:27'!impactaA: persona 	^nil.! !!SospechosoCovid methodsFor: 'grupos' stamp: 'NicolasZulaica 5/13/2021 23:19'!pinchaBurbuja: burbuja	^nil.! !Condicion subclass: #Vacunado	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Condiciones'!!Vacunado commentStamp: 'NicolasZulaica 5/15/2021 23:29' prior: 0!Modela la condicion de que se esta vacunado!!Vacunado methodsFor: 'acceso' stamp: 'NicolasZulaica 5/11/2021 20:52'!permisoCircular	^PuedeCircular new.! !